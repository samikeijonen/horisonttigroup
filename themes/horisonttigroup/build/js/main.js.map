{"version":3,"file":"js/main.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,MAAM;AACnD,8BAA8B,MAAM;AACpC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,qCAAqC;AAC5E;;AAEA;AACA,2CAA2C,mBAAmB,EAAE,2BAA2B;AAC3F;;AAEA;AACA,wDAAwD,kCAAkC,IAAI,iCAAiC,SAAS,2BAA2B;AACnK;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,sEAAsE,MAAM;AAC5E;AACA;AACA,8DAA8D,MAAM;AACpE;;AAEA,uCAAuC,wCAAwC;AAC/E;;AAEA,oDAAoD,kCAAkC,IAAI,iCAAiC,SAAS,2BAA2B;;AAE/J;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,WAAW,0BAA0B,GAAG,qCAAqC;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B,GAAG,qCAAqC;AACjF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,WAAW,0BAA0B,GAAG,qCAAqC;AAC7E;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA,WAAW,0BAA0B,GAAG,qCAAqC;AAC7E;;AAEA;AACA;AACA,WAAW,0BAA0B,GAAG,qCAAqC;AAC7E;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA,WAAW,0BAA0B,GAAG,qCAAqC;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAE2C;;;;;;;;;;;;;;;AC7nB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EACxB;EACA,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAC5C,+GACJ,CAAC;EAEDF,cAAc,CAACG,OAAO,CAAIC,aAAa,IAAM;IACzCA,aAAa,CAACC,OAAO,CAACC,QAAQ,GAAG,UAAU;EAC/C,CAAE,CAAC;;EAEH;EACA,MAAMC,UAAU,GAAGN,QAAQ,CAACC,gBAAgB,CAAE,iBAAkB,CAAC;EAEjE,IAAIM,aAAa,GAAG,CAAC;EACrB,IAAIC,SAAS,GAAG,IAAI;;EAEpB;AACJ;AACA;AACA;AACA;EACI,SAASC,aAAaA,CAAEC,MAAM,EAAG;IAC7BA,MAAM,CAACC,SAAS,CAACC,GAAG,CAAE,cAAe,CAAC;EAC1C;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,SAASC,YAAYA,CAAEC,KAAK,EAAG;IAC3B;IACA,IAAKN,SAAS,KAAK,MAAM,IAAIM,KAAK,CAACC,cAAc,EAAG;MAChD,OAAO,IAAI;IACf;IAEA,IAAKP,SAAS,KAAK,IAAI,IAAIM,KAAK,CAACC,cAAc,EAAG;MAC9C,OAAO,IAAI;IACf;IAEA,OAAO,KAAK;EAChB;;EAEA;AACJ;AACA;AACA;AACA;EACI,SAASC,WAAWA,CAAEC,OAAO,EAAG;IAC5BA,OAAO,CAACf,OAAO,CAAIY,KAAK,IAAM;MAC1B,IAAKI,MAAM,CAACC,OAAO,GAAGZ,aAAa,EAAG;QAClCC,SAAS,GAAG,MAAM;MACtB,CAAC,MAAM;QACHA,SAAS,GAAG,IAAI;MACpB;MAEAD,aAAa,GAAGW,MAAM,CAACC,OAAO;MAE9B,MAAMT,MAAM,GAAGI,KAAK,CAACJ,MAAM;MAE3B,IAAKG,YAAY,CAAEC,KAAM,CAAC,EAAG;QACzBL,aAAa,CAAEC,MAAO,CAAC;MAC3B;IACJ,CAAE,CAAC;EACP;;EAEA;EACA,MAAMU,OAAO,GAAG;IACZC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE;EACf,CAAC;EAED,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAER,WAAW,EAAEI,OAAQ,CAAC;;EAEjE;EACAd,UAAU,CAACJ,OAAO,CAAIuB,SAAS,IAAM;IACjCF,QAAQ,CAACG,OAAO,CAAED,SAAU,CAAC;EACjC,CAAE,CAAC;AACP,CAAC;AAED,iEAAe3B,aAAa;;;;;;;;;;;;;;ACvGb,SAAS6B,gBAAgBA,CAAA,EAAG;EACvC,MAAMC,UAAU,GAAG5B,QAAQ,CAAC6B,aAAa,CAAE,cAAe,CAAC;EAE3D,IAAKD,UAAU,EAAG;IACd,MAAME,gBAAgB,GAAGF,UAAU,CAACG,YAAY,GAAG,IAAI;IAEvD/B,QAAQ,CAACgC,eAAe,CAACC,KAAK,CAACC,WAAW,CACtC,sBAAsB,EACtBJ,gBACJ,CAAC;EACL;EAEA,MAAMK,aAAa,GAAGnC,QAAQ,CAAC6B,aAAa,CAAE,oBAAqB,CAAC;EAEpE,IAAKM,aAAa,EAAG;IACjB,MAAMC,mBAAmB,GAAGD,aAAa,CAACJ,YAAY,GAAG,IAAI;IAE7D/B,QAAQ,CAACgC,eAAe,CAACC,KAAK,CAACC,WAAW,CACtC,yBAAyB,EACzBE,mBACJ,CAAC;EACL;AACJ;;;;;;;;;;;;;;;ACtBA;AACqD,CAAC;;AAEtD,MAAME,UAAU,GAAGA,CAAA,KAAM;EACrB;EACA,MAAMC,MAAM,GAAGvC,QAAQ,CAACC,gBAAgB,CAAE,qBAAsB,CAAC;EACjE,KAAM,MAAMuC,KAAK,IAAID,MAAM,EAAG;IAC1B;IACA,MAAME,GAAG,GAAGD,KAAK,CAACX,aAAa,CAAE,KAAM,CAAC;IACxC,MAAMa,SAAS,GAAGD,GAAG,CAACE,YAAY,CAAE,QAAS,CAAC;IAC9C,MAAMC,QAAQ,GAAGH,GAAG,CAACE,YAAY,CAAE,OAAQ,CAAC;IAE5CH,KAAK,CAACK,YAAY,CAAE,kBAAkB,EAAEH,SAAU,CAAC;IACnDF,KAAK,CAACK,YAAY,CAAE,iBAAiB,EAAED,QAAS,CAAC;EACrD;EAEA,MAAME,QAAQ,GAAG,IAAIT,2DAAkB,CAAE;IACrCU,OAAO,EAAE,mBAAmB;IAC5BC,QAAQ,EAAE,GAAG;IACbC,UAAU,EAAEA,CAAA,KAAM,6NAAsB,CAAE;EAC9C,CAAE,CAAC;EAEHH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACnB,CAAC;AAED,iEAAeZ,UAAU;;;;;;;;;;;;;;;ACzBzB;AACuD;AAEvD,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAClB;EACA,MAAMC,QAAQ,GAAGtD,QAAQ,CAAC6B,aAAa,CAAE,oBAAqB,CAAC;EAC/D,MAAM0B,SAAS,GAAGvD,QAAQ,CAAC6B,aAAa,CAAE,qBAAsB,CAAC;;EAEjE;EACA,IAAK,CAAEyB,QAAQ,IAAI,CAAEC,SAAS,EAAG;IAC7B;EACJ;EAEA,IAAIJ,wDAAU,CAAEG,QAAQ,EAAEC,SAAS,EAAE;IACjCC,aAAa,EAAE,gDAAgD;IAC/DC,gBAAgB,EACZ,4DAA4D;IAChEC,sBAAsB,EAAE,sBAAsB;IAC9CC,yBAAyB,EAAE,0BAA0B;IACrD;IACAC,cAAc,EAAE,KAAK;IACrB;IACA;IACAC,kBAAkB,EAAEC,QAAQ,CAACD,kBAAkB;IAC/CE,SAASA,CAAEC,OAAO,EAAG;MACjB;MACAhE,QAAQ,CAACgC,eAAe,CAACrB,SAAS,CAACC,GAAG,CAAE,oBAAqB,CAAC;MAC9DZ,QAAQ,CAACgC,eAAe,CAACrB,SAAS,CAACC,GAAG,CAAE,eAAgB,CAAC;MAEzDoD,OAAO,CAACrD,SAAS,CAACC,GAAG,CAAE,WAAY,CAAC;MACpCwC,yDAAO,CAAEY,OAAO,EAAE,SAAU,CAAC;IACjC,CAAC;IAEDC,UAAUA,CAAED,OAAO,EAAG;MAClB;MACAhE,QAAQ,CAACgC,eAAe,CAACrB,SAAS,CAACuD,MAAM,CAAE,oBAAqB,CAAC;MACjElE,QAAQ,CAACgC,eAAe,CAACrB,SAAS,CAACuD,MAAM,CAAE,eAAgB,CAAC;MAC5Dd,yDAAO,CAAEY,OAAO,EAAE,UAAU,EAAE,WAAY,CAAC;IAC/C;EACJ,CAAE,CAAC;AACP,CAAC;AAED,iEAAeX,OAAO;;;;;;;;;;;;;;AC1CtB;AACA;AACA;AACA;AACA,cAAc,kCAAkC;;AAEhD;AACA,cAAc,6BAA6B;AAC3C,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA,iCAAiC,EAAE,KAAK,OAAO;;AAE/C;AACA,6BAA6B,MAAM,GAAG,MAAM;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B;;AAEA;AACA,8CAA8C,EAAE;AAChD,+CAA+C,EAAE;AACjD;AACA,cAAc,8BAA8B;;AAE5C,aAAa,cAAc,oBAAoB,kBAAkB,kBAAkB;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA,cAAc,2CAA2C;;AAEzD,cAAc,oCAAoC;;AAElD,cAAc,8CAA8C;;AAE5D,cAAc,uCAAuC;;AAErD,cAAc,6CAA6C;;AAE3D,cAAc,uCAAuC;;AAErD,cAAc,qCAAqC;;AAEnD,cAAc,uCAAuC;;AAErD,cAAc,0CAA0C;;AAExD,cAAc,+CAA+C;;AAE7D;AACA;AACA;AACA,aAAa,sCAAsC;AACnD;;AAEA,gBAAgB,YAAY,cAAc;;AAE1C;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C,YAAY,+BAA+B;AAC3C,YAAY,+BAA+B;AAC3C,YAAY,qBAAqB;AACjC,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,kBAAkB,mBAAmB;AACjD,YAAY,kBAAkB,mBAAmB;AACjD,YAAY,kBAAkB,cAAc,qBAAqB;AACjE,YAAY,kBAAkB,gBAAgB;AAC9C,YAAY,kBAAkB,eAAe,kBAAkB;AAC/D,YAAY,kBAAkB,eAAe,gBAAgB,gBAAgB;AAC7E,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,YAAY,cAAc,+BAA+B;AACzD,YAAY,cAAc,+BAA+B;AACzD,YAAY,cAAc,+BAA+B;AACzD,YAAY,cAAc,+BAA+B;AACzD;AACA,YAAY,gCAAgC;AAC5C,YAAY,WAAW,qBAAqB;AAC5C,YAAY,gBAAgB;AAC5B,YAAY,4DAA4D;AACxE,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,yGAAyG;AACrH,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,UAAU,WAAW;AACrB,YAAY,6BAA6B;AACzC,YAAY,oBAAoB;AAChC,YAAY,eAAe,uBAAuB;AAClD,UAAU,WAAW;AACrB,YAAY,gBAAgB;AAC5B,YAAY,+CAA+C;AAC3D;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,UAAU,WAAW;AACrB,YAAY,wDAAwD;AACpE,YAAY,qBAAqB,iBAAiB;AAClD,YAAY,4DAA4D;AACxE;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA,UAAU,kEAAkE;AAC5E;AACA;AACA;AACA,UAAU,mDAAmD;AAC7D;AACA;AACA;AACA,UAAU,qFAAqF;AAC/F;AACA;AACA;AACA,UAAU,+EAA+E;AACzF;AACA;AACA;AACA,UAAU,sEAAsE;AAChF;AACA;AACA;AACA,UAAU,0DAA0D;AACpE;AACA;AACA;AACA,UAAU,2DAA2D;AACrE;AACA;AACA;AACA,UAAU,+DAA+D;AACzE;AACA;AACA;AACA,UAAU,8DAA8D;AACxE;AACA;AACA;AACA;AACA,UAAU,qEAAqE;AAC/E;AACA;AACA;AACA,UAAU,4DAA4D;AACtE;AACA;AACA;AACA,UAAU,gGAAgG;AAC1G;AACA;AACA;AACA,UAAU,iFAAiF;AAC3F;AACA;AACA;AACA,UAAU,wDAAwD;AAClE;AACA,UAAU,qFAAqF;AAC/F;AACA;;AAEA;AACA,cAAc,4BAA4B;AAC1C,eAAe,iDAAiD;AAChE;;AAEA;AACA,cAAc,2BAA2B;AACzC,aAAa,6GAA6G;AAC1H;;AAEA;AACA,cAAc,2BAA2B;AACzC,aAAa,oCAAoC;AACjD;;AAEA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,eAAe,wBAAwB;;AAEvC;AACA,eAAe,+BAA+B;;AAE9C;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,yBAAyB;AACtC,aAAa,QAAQ;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,yBAAyB;AACtC;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,qCAAqC;AAClD,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,oIAAoI;AACpI;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,kBAAkB;AAC/B;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,wBAAwB;AACrC,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA,eAAe,0CAA0C;AACzD;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,cAAc,8BAA8B;;AAE5C,cAAc,gCAAgC;;AAE9C,cAAc,mCAAmC;;AAEjD,cAAc,qCAAqC;;AAEnD;AACA;AACA,aAAa,WAAW;AACxB,aAAa,gBAAgB;AAC7B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;;AAE9D;AACA,eAAe,yBAAyB;;AAExC;AACA,eAAe,mBAAmB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;;AAE1B;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;;AAGA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,GAAG;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA,mBAAmB,kBAAkB;;AAErC,4CAA4C;AAC5C;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,8CAA8C;;AAE5D,cAAc,mCAAmC;;AAEjD,cAAc,kCAAkC;;AAEhD,cAAc,uCAAuC;;AAErD;AACA,WAAW,mBAAmB;AAC9B,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mBAAmB;AAC9B,WAAW,OAAO,sDAAsD;AACxE,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,oCAAoC;;AAElD,cAAc,8CAA8C;;AAE5D,cAAc,kCAAkC;;AAEhD,cAAc,uCAAuC;;AAErD,cAAc,oEAAoE;;AAElF;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;;AAE/B;AACA,gBAAgB,eAAe;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;;;AAGA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C,gBAAgB;AAChB;;;AAGA;AACA;AACA,eAAe,4DAA4D;AAC3E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;;AAEA;AACA;AACA,aAAa,uBAAuB;;AAEpC;AACA;AACA;AACA,IAAI,YAAY;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,cAAc,oCAAoC;;AAElD,cAAc,uCAAuC;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA,eAAe,yBAAyB;;AAExC;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,eAAe;AACf;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,eAAe;AACf;;;AAGA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iGAAiG;;AAEjG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;;AAEA,cAAc,oCAAoC;;AAElD,cAAc,8CAA8C;;AAE5D,cAAc,uCAAuC;;AAErD,cAAc,kCAAkC;;AAEhD,cAAc,uCAAuC;;AAErD,cAAc,oDAAoD;;AAElE,cAAc,qDAAqD;;AAEnE;AACA,cAAc,2BAA2B;AACzC,aAAa,iDAAiD;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA,eAAe,mBAAmB;;AAElC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,YAAY;AACzB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,cAAc;;;AAG7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;;AAE3B;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,YAAY;AACzB,aAAa,cAAc;AAC3B,eAAe;AACf;;;AAGA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,YAAY;AACzB;;;AAGA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;;AAEN,eAAe,6BAA6B;;;AAG5C;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,iBAAiB,iCAAiC;AAClD;AACA,MAAM;AACN;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,qBAAqB,6BAA6B;AAC/D,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA,gCAAgC;;AAEhC;AACA,wBAAwB;;AAExB,eAAe,+BAA+B;;AAE9C;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA,OAAO;AACP,KAAK,GAAG;;AAER,eAAe,gCAAgC;;AAE/C;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEyC;AACzC;;;;;;;UCv6DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;;;;;;;;;;;ACrFA;AACyD;AACK;AACb;AACL;AAE5CvD,uEAAa,CAAC,CAAC;AACf6B,yEAAgB,CAAC,CAAC;AAClBW,kEAAU,CAAC,CAAC;AACZe,gEAAO,CAAC,CAAC,C","sources":["webpack://horisonttigroup/../../node_modules/@meom/navigation/dist/index.esm.js","webpack://horisonttigroup/./js/components/animate-in-view.js","webpack://horisonttigroup/./js/components/component-heights.js","webpack://horisonttigroup/./js/components/photoswipe.js","webpack://horisonttigroup/./js/components/site-nav.js","webpack://horisonttigroup/../../node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","webpack://horisonttigroup/webpack/bootstrap","webpack://horisonttigroup/webpack/runtime/define property getters","webpack://horisonttigroup/webpack/runtime/ensure chunk","webpack://horisonttigroup/webpack/runtime/get javascript chunk filename","webpack://horisonttigroup/webpack/runtime/get mini-css chunk filename","webpack://horisonttigroup/webpack/runtime/global","webpack://horisonttigroup/webpack/runtime/hasOwnProperty shorthand","webpack://horisonttigroup/webpack/runtime/load script","webpack://horisonttigroup/webpack/runtime/make namespace object","webpack://horisonttigroup/webpack/runtime/publicPath","webpack://horisonttigroup/webpack/runtime/jsonp chunk loading","webpack://horisonttigroup/./js/main.js"],"sourcesContent":["/**\n * Apply a CSS animation to an element\n *\n * @param {Node}    elem      The element to animate.\n * @param {string}  animation Class name for animation.\n * @param {boolean} hide      Class name for hiding animated element.\n */\nfunction animate( elem, animation, hide ) {\n    // If there's no element or animation, do nothing.\n    if ( ! elem || ! animation ) {\n        return;\n    }\n\n    // Apply the animation.\n    elem.classList.add( animation );\n\n    // Detect when the animation ends.\n    elem.addEventListener(\n        'animationend',\n        function endAnimation() {\n            // Remove the animation class.\n            elem.classList.remove( animation );\n\n            // If the element should be hidden, hide it.\n            if ( hide ) {\n                elem.classList.remove( hide );\n            }\n\n            // Remove this event listener.\n            elem.removeEventListener( 'animationend', endAnimation, false );\n        },\n        false\n    );\n}\n\n/**\n * Update ARIA.\n *\n * @param {Object} el Element.\n * @param {string} aria ARIA to change.\n */\nfunction updateAria( el, aria ) {\n    if ( 'undefined' === typeof el || 0 >= aria.length ) {\n        return;\n    }\n\n    const hiddenEl =\n        'true' === el.getAttribute( `aria-${ aria }` ) ? 'false' : 'true';\n    el.setAttribute( `aria-${ aria }`, hiddenEl );\n}\n\n/* Import internal depedencies. */\n\nconst TAB_KEY = 9;\nconst ESCAPE_KEY = 27;\n\n/**\n * Define the constructor to instantiate a navigation.\n *\n * @class\n * @param {Object} element Navigation element.\n * @param {Object} toggle  Navigation toggle element.\n * @param {Object} options The settings and options for this instance.\n */\nfunction Navigation(element, toggle, options = {}) {\n    // Default settings.\n    const defaults = {\n        action: 'click',\n        subNavAnchors: '.js-site-nav-items > .menu-item-has-children > a',\n        subSubNavAnchors:\n            '.js-site-nav-items .sub-menu > .menu-item-has-children > a',\n        toggleNavClass: true,\n        toggleNavClassValue: 'is-opened',\n        toggleSubNavClassValue: 'is-opened',\n        closeNavOnEscKey: true,\n        closeNavOnLastTab: false,\n        subNavClass: '.sub-menu',\n        subToggleButtonClasses: '',\n        subSubToggleButtonClasses: '',\n        animateSubNav: false,\n        animateSubNavClass: '',\n        visuallyHiddenClass: 'screen-reader-text',\n        expandChildNavText: 'Sub menu',\n        dropDownIcon:\n            '<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M17.5 11.6L12 16l-5.5-4.4.9-1.2L12 14l4.5-3.6 1 1.2z\"></path></svg>',\n        onCreate: null,\n        onOpenNav: null,\n        onCloseNav: null,\n        onOpenSubNav: null,\n        onCloseSubNav: null,\n    };\n\n    // Bind methods.\n    this._handleNav = this.handleNav.bind(this);\n    this._handleSubNav = this.handleSubNav.bind(this);\n    this._handleCloseNav = this.handleCloseNav.bind(this);\n    this._handleCloseSubNav = this.handleCloseSubNav.bind(this);\n    this._closeAllSubMenus = this.closeAllSubMenus.bind(this);\n    this._closeAllSubSubMenus = this.closeAllSubSubMenus.bind(this);\n    this._setSubMenu = this.setSubMenu.bind(this);\n    this._closeAllSubMenuToggles = this.closeAllSubMenuToggles.bind(this);\n    this._closeAllSubSubMenuToggles = this.closeAllSubSubMenuToggles.bind(this);\n    this._handleDocClick = this.handleDocClick.bind(this);\n    this._handleFocus = this.handleFocus.bind(this);\n\n    // Merge options to defaults.\n    const settings = { ...defaults, ...options };\n\n    // Set elements and settings.\n    this.$element = element;\n    this.$toggle = toggle;\n    this.settings = settings;\n    this.navOpened = false;\n\n    // Set all sub and sub sub navigations.\n    this.$subNavs = this.$element.querySelectorAll(this.settings.subNavAnchors);\n    this.$subSubNavs = this.$element.querySelectorAll(\n        this.settings.subSubNavAnchors\n    );\n\n    // Initialise everything needed for the navigation.\n    this.create();\n}\n\n/**\n * Setup navigation.\n */\nNavigation.prototype.create = function () {\n    // Set ARIA for navigation toggle button.\n    this.$toggle.setAttribute('aria-expanded', 'false');\n\n    // Set data value for nav element. This is for targeting without a class name.\n    this.$element.setAttribute('data-meom-nav', 'navigation');\n\n    // Setup sub navs toggle buttons.\n    this.$subNavs.forEach(function (subNav) {\n        // Hide link in JS to avoid cumulative layout shift (CLS).\n        if (this.settings.action === 'click') {\n            subNav.setAttribute('hidden', '');\n        }\n\n        const subToggleButton = document.createElement('button');\n        subToggleButton.setAttribute('data-meom-nav', 'sub-toggle');\n        subToggleButton.setAttribute('aria-expanded', 'false');\n\n        subToggleButton.className = `${this.settings.subToggleButtonClasses}`;\n        subToggleButton.type = 'button';\n\n        if (this.settings.action === 'click') {\n            subToggleButton.innerHTML = `${subNav.textContent}${this.settings.dropDownIcon}`;\n        }\n\n        if (this.settings.action === 'hover') {\n            subToggleButton.innerHTML = `<span class=\"${this.settings.visuallyHiddenClass}\">${this.settings.expandChildNavText}</span>${this.settings.dropDownIcon}`;\n        }\n\n        // Add toggle button after anchor.\n        subNav.after(subToggleButton);\n    }, this);\n\n    // Setup sub sub navs toggle buttons.\n    this.$subSubNavs.forEach(function (subSubNav, index) {\n        const subToggleButton = document.createElement('button');\n        subToggleButton.setAttribute('data-meom-nav', 'sub-sub-toggle');\n        subToggleButton.setAttribute('aria-expanded', 'false');\n\n        subToggleButton.setAttribute('aria-controls', `sub-sub-menu-${index}`);\n        // Add matching id for next sub-sub-menu.\n        if (subSubNav.nextElementSibling) {\n            subSubNav.nextElementSibling.id = `sub-sub-menu-${index}`;\n        }\n\n        subToggleButton.className = `${this.settings.subSubToggleButtonClasses}`;\n        subToggleButton.type = 'button';\n\n        subToggleButton.innerHTML = `<span class=\"${this.settings.visuallyHiddenClass}\">${this.settings.expandChildNavText}</span>${this.settings.dropDownIcon}`;\n\n        // Add toggle button after anchor.\n        subSubNav.after(subToggleButton);\n    }, this);\n\n    // Set event listeners.\n    this.$toggle.addEventListener('click', this._handleNav, false);\n    this.$element.addEventListener('click', this._handleSubNav, false);\n    document.addEventListener('keydown', this._handleCloseNav, false);\n    this.$element.addEventListener('keydown', this._handleCloseSubNav, false);\n    this.$element.addEventListener('keydown', this._handleFocus, false);\n    document.addEventListener('click', this._handleDocClick, false);\n\n    /**\n     * Called after the component is initialized.\n     *\n     * @callback onCreate\n     */\n    if (\n        this.settings.onCreate &&\n        typeof this.settings.onCreate === 'function'\n    ) {\n        this.settings.onCreate(this.$element, this.$toggle);\n    }\n\n    return this;\n};\n\n/**\n * Handle navigation opening and closing.\n *\n * @param {Event} event\n * @return {this} this\n */\nNavigation.prototype.handleNav = function (event) {\n    // If navigation is closed and we want to open it.\n    if (!this.navOpened) {\n        updateAria(this.$toggle, 'expanded');\n\n        if (this.settings.toggleNavClass) {\n            this.$element.classList.add(this.settings.toggleNavClassValue);\n        }\n\n        // Set navigation as opened.\n        this.navOpened = true;\n\n        /**\n         * Called after the nav is opened.\n         *\n         * @callback onOpenNav\n         */\n        if (\n            this.settings.onOpenNav &&\n            typeof this.settings.onOpenNav === 'function'\n        ) {\n            this.settings.onOpenNav(this.$element, this.$toggle, event);\n        }\n    } else {\n        updateAria(this.$toggle, 'expanded');\n\n        if (this.settings.toggleNavClass) {\n            this.$element.classList.remove(this.settings.toggleNavClassValue);\n        }\n\n        // Set focus back to toggle button.\n        if (this.$toggle) {\n            this.$toggle.focus();\n        }\n\n        // Set navigation as closed.\n        this.navOpened = false;\n\n        this._closeAllSubMenus();\n        this._closeAllSubMenuToggles();\n\n        /**\n         * Called after the nav is closed.\n         *\n         * @callback onCloseNav\n         */\n        if (\n            this.settings.onCloseNav &&\n            typeof this.settings.onCloseNav === 'function'\n        ) {\n            this.settings.onCloseNav(this.$element, this.$toggle, event);\n        }\n    }\n\n    return this;\n};\n\n/**\n * Handle sub navigation opening and closing.\n *\n * @param {Event} event\n * @return {this} this\n */\nNavigation.prototype.handleSubNav = function (event) {\n    const target = event.target;\n    // Use .closest because there can be SVG inside the button.\n    const closestSubButton = target.closest('[data-meom-nav=\"sub-toggle\"]');\n    const closestSubSubButton = target.closest(\n        '[data-meom-nav=\"sub-sub-toggle\"]'\n    );\n\n    // If the clicked element doesn't have the correct data attribute, bail.\n    if (!closestSubButton && !closestSubSubButton) {\n        return this;\n    }\n\n    // Close other sub menus first.\n    // If toggle <button> next element (sub-menu) is already open, skip this.\n    // Or we are clicking sub sub toggle.\n    if (\n        !target.nextElementSibling.classList.contains(\n            this.settings.toggleSubNavClassValue\n        ) &&\n        !target.matches('[data-meom-nav=\"sub-sub-toggle\"]')\n    ) {\n        this._closeAllSubMenus();\n        this._closeAllSubMenuToggles();\n    }\n\n    // Then again, close all sub sub menus when trying to open any other sub sub menu that is not already open.\n    // So that only one sub sub menu can be open at current time.\n    if (\n        !target.nextElementSibling.classList.contains(\n            this.settings.toggleSubNavClassValue\n        ) &&\n        target.matches('[data-meom-nav=\"sub-sub-toggle\"]')\n    ) {\n        this._closeAllSubSubMenus(target);\n        this._closeAllSubSubMenuToggles(target);\n    }\n\n    // Update sub toggle ARIA.\n    updateAria(target, 'expanded');\n\n    // Toggle class for next <ul> element (sub-menu).\n    if (target.nextElementSibling) {\n        this._setSubMenu(target.nextElementSibling, event);\n    }\n\n    return this;\n};\n\n/**\n * Handle closing nav with Esc key.\n *\n * @param {Object} event Event triggered.\n * @return {this} this\n */\nNavigation.prototype.handleCloseNav = function (event) {\n    // Close nav on Esc key if nav is open.\n    if (\n        this.navOpened &&\n        this.settings.closeNavOnEscKey &&\n        ESCAPE_KEY === event.keyCode\n    ) {\n        this._handleNav(event);\n    }\n\n    return this;\n};\n\n/**\n * Handle closing sub-nav with Tab or Esc key.\n *\n * @param {Object} event Event triggered.\n * @return {this} this\n */\nNavigation.prototype.handleCloseSubNav = function (event) {\n    // Set focusable elements inside sub-menu element.\n    const openSubMenu = document.querySelector(\n        `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n    );\n\n    if (openSubMenu) {\n        // Focusable elements.\n        const focusableElements = openSubMenu.querySelectorAll([\n            'a[href]',\n            'area[href]',\n            'input:not([disabled])',\n            'select:not([disabled])',\n            'textarea:not([disabled])',\n            'button:not([disabled])',\n        ]);\n\n        const lastFocusableElement =\n            focusableElements[focusableElements.length - 1];\n\n        // Last Tab closes sub-menu.\n        if (\n            TAB_KEY === event.keyCode &&\n            !event.shiftKey &&\n            event.target === lastFocusableElement\n        ) {\n            this._closeAllSubMenus();\n            this._closeAllSubMenuToggles();\n        }\n\n        const subMenuToggle = openSubMenu.previousElementSibling;\n\n        // Shift+Tab from sub-menu toggle closes sub-menu.\n        if (\n            subMenuToggle &&\n            TAB_KEY === event.keyCode &&\n            event.shiftKey &&\n            event.target === subMenuToggle\n        ) {\n            this._closeAllSubMenus();\n            this._closeAllSubMenuToggles();\n        }\n    }\n\n    // Close sub-menu on Esc key.\n    if (ESCAPE_KEY === event.keyCode) {\n        // If we are on the sub-menu toggle itself.\n        if (\n            event.target.matches(\n                '[data-meom-nav=\"sub-toggle\"][aria-expanded=\"true\"]'\n            )\n        ) {\n            this._handleSubNav(event);\n            this._closeAllSubMenus();\n            this._closeAllSubMenuToggles();\n            return this;\n        }\n\n        // Previous sub-menu toggle.\n        const parentSubMenu = event.target.closest(\n            `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n        );\n\n        // Set focus to sub menu toggle.\n        if (parentSubMenu) {\n            // sub-menu toggle.\n            const subMenuToggle = parentSubMenu.previousElementSibling;\n\n            // Set focus back to sub-menu toggle.\n            if (subMenuToggle) {\n                subMenuToggle.focus();\n            }\n        }\n\n        this._closeAllSubMenus();\n        this._closeAllSubMenuToggles();\n    }\n\n    return this;\n};\n\n/**\n * Handle focus when nav is open.\n *\n * @param {Object} event Event triggered.\n * @return {this} this\n */\nNavigation.prototype.handleFocus = function (event) {\n    // Bail if menu is not open.\n    if (!this.navOpened) {\n        return this;\n    }\n\n    // Bail if `closeNavOnLastTab` setting is not set to true.\n    if (!this.settings.closeNavOnLastTab) {\n        return this;\n    }\n\n    // Set focusable elements inside element.\n    const focusableElements = this.$element.querySelectorAll([\n        'a[href]',\n        'area[href]',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'button:not([disabled])',\n    ]);\n\n    const lastFocusableElement =\n        focusableElements[focusableElements.length - 1];\n\n    // Close nav on last Tab.\n    if (\n        TAB_KEY === event.keyCode &&\n        !event.shiftKey &&\n        event.target === lastFocusableElement\n    ) {\n        event.preventDefault();\n        // Close nav.\n        this._handleNav(event);\n    }\n\n    return this;\n};\n\n/**\n * Handle closing sub-navs when clicking outside of nav.\n *\n * @param {Object} event Event triggered.\n * @return {this} this\n */\nNavigation.prototype.handleDocClick = function (event) {\n    // Bail if clicking inside the nav.\n    if (event.target.closest('[data-meom-nav=\"navigation\"]')) {\n        return this;\n    }\n\n    this._closeAllSubMenus();\n    this._closeAllSubMenuToggles();\n\n    return this;\n};\n\n/**\n * Close all sub menus.\n *\n * @return {this} this\n */\nNavigation.prototype.closeAllSubMenus = function () {\n    const openSubMenus = document.querySelectorAll(\n        `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n    );\n\n    openSubMenus.forEach(function (openSubMenu) {\n        this._setSubMenu(openSubMenu);\n    }, this);\n\n    return this;\n};\n\n/**\n * Close only same level sub sub menus.\n *\n * @param {Object} target Target triggered.\n * @return {this} this\n */\nNavigation.prototype.closeAllSubSubMenus = function (target) {\n    const sameLevelParentSubMenu = target.closest(\n        `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n    );\n\n    // Get same level sub sub menus\n    const openSubSubMenus = sameLevelParentSubMenu.querySelectorAll(\n        `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n    );\n\n    openSubSubMenus.forEach(function (openSubSubMenu) {\n        this._setSubMenu(openSubSubMenu);\n    }, this);\n\n    return this;\n};\n\n/**\n * Set classes and animate for sub-menu.\n *\n * @param {Node}   submenu Sub menu node.\n * @param {Object} event   Event.\n * @return {this} this\n */\nNavigation.prototype.setSubMenu = function (submenu, event) {\n    if (!submenu) {\n        return this;\n    }\n\n    if (!submenu.classList.contains(this.settings.toggleSubNavClassValue)) {\n        submenu.classList.add(this.settings.toggleSubNavClassValue);\n\n        // Base animation with class.\n        if (this.settings.animateSubNav) {\n            animate(submenu, this.settings.animateSubNavClass);\n        }\n\n        /**\n         * Called after the sub nav is opened.\n         *\n         * @callback onOpenSubNav\n         */\n        if (\n            this.settings.onOpenSubNav &&\n            typeof this.settings.onOpenSubNav === 'function'\n        ) {\n            this.settings.onOpenSubNav(\n                this.$element,\n                this.$toggle,\n                submenu,\n                event\n            );\n        }\n    } else {\n        submenu.classList.remove(this.settings.toggleSubNavClassValue);\n\n        /**\n         * Called after the sub nav is closed.\n         *\n         * @callback onCloseSubNav\n         */\n        if (\n            this.settings.onCloseSubNav &&\n            typeof this.settings.onCloseSubNav === 'function'\n        ) {\n            this.settings.onCloseSubNav(\n                this.$element,\n                this.$toggle,\n                submenu,\n                event\n            );\n        }\n    }\n\n    return this;\n};\n\n/**\n * Close all sub menu toggles.\n *\n * @return {this} this\n */\nNavigation.prototype.closeAllSubMenuToggles = function () {\n    const openSubMenuToggles = document.querySelectorAll(\n        '[data-meom-nav=\"sub-toggle\"][aria-expanded=\"true\"]'\n    );\n\n    openSubMenuToggles.forEach(function (openSubMenuToggle) {\n        updateAria(openSubMenuToggle, 'expanded');\n    });\n\n    const openSubSubMenuToggles = document.querySelectorAll(\n        '[data-meom-nav=\"sub-sub-toggle\"][aria-expanded=\"true\"]'\n    );\n\n    openSubSubMenuToggles.forEach(function (openSubSubMenuToggle) {\n        updateAria(openSubSubMenuToggle, 'expanded');\n    });\n\n    return this;\n};\n\n/**\n * Close all same level sub sub menu toggles.\n *\n * @param {Object} target Target.\n * @return {this} this\n */\nNavigation.prototype.closeAllSubSubMenuToggles = function (target) {\n    const sameLevelParentSubMenu = target.closest(\n        `${this.settings.subNavClass}.${this.settings.toggleSubNavClassValue}`\n    );\n\n    const openSubSubMenuToggles = sameLevelParentSubMenu.querySelectorAll(\n        '[data-meom-nav=\"sub-sub-toggle\"][aria-expanded=\"true\"]'\n    );\n\n    openSubSubMenuToggles.forEach(function (openSubSubMenuToggle) {\n        updateAria(openSubSubMenuToggle, 'expanded');\n    });\n\n    return this;\n};\n\nexport { Navigation, animate, updateAria };\n","/* global IntersectionObserver */\n/* https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API */\n/**\n * Animate elements when they appear on view.\n *\n * Link 1: https://www.smashingmagazine.com/2021/07/dynamic-header-intersection-observer/\n * Link 2: https://www.hweaver.com/intersection-observer-single-page-navigation/\n *\n * Example CSS could look something like this for animated text:\n *\n * .text-and-image__content h2,\n * .text-and-image__content p  {\n *      animation-duration: $transition-duration-5;\n *      animation-fill-mode: both;\n *      opacity: 0;\n * }\n *\n * .is-animating .text-and-image__content h2,\n * .is-animating .text-and-image__content p {\n *      animation-name: fade-in-down;\n *}\n */\nconst animateInView = () => {\n    // Add data attributes for animations.\n    const siteAnimations = document.querySelectorAll(\n        '.iloq-animation > h1, .iloq-animation > h2, .iloq-animation > h3, .iloq-animation > p, .iloq-animation > div '\n    );\n\n    siteAnimations.forEach( ( siteAnimation ) => {\n        siteAnimation.dataset.animated = 'animated';\n    } );\n\n    // Start generating the animation trigger.\n    const animations = document.querySelectorAll( '[data-animated]' );\n\n    let prevYPosition = 0;\n    let direction = 'up';\n\n    /**\n     * What to do when firing animation.\n     *\n     * @param {Object} target\n     */\n    function fireAnimation( target ) {\n        target.classList.add( 'is-animating' );\n    }\n\n    /**\n     * When to fire animation.\n     *\n     * @param {Object} entry Our entry.\n     * @return {boolean}     true or false.\n     */\n    function shouldUpdate( entry ) {\n        // We don't really use down or up in here but might be useful for other projects.\n        if ( direction === 'down' && entry.isIntersecting ) {\n            return true;\n        }\n\n        if ( direction === 'up' && entry.isIntersecting ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Animation logic.\n     *\n     * @param {*} entries\n     */\n    function onIntersect( entries ) {\n        entries.forEach( ( entry ) => {\n            if ( window.scrollY > prevYPosition ) {\n                direction = 'down';\n            } else {\n                direction = 'up';\n            }\n\n            prevYPosition = window.scrollY;\n\n            const target = entry.target;\n\n            if ( shouldUpdate( entry ) ) {\n                fireAnimation( target );\n            }\n        } );\n    }\n\n    /* Observe when 50% in view. */\n    const options = {\n        rootMargin: '0px',\n        threshold: 0.5,\n    };\n\n    const observer = new IntersectionObserver( onIntersect, options );\n\n    /* Observe all sections which have `data-animatated` attribute. */\n    animations.forEach( ( animation ) => {\n        observer.observe( animation );\n    } );\n};\n\nexport default animateInView;\n","export default function componentHeights() {\n    const siteHeader = document.querySelector( '.site-header' );\n\n    if ( siteHeader ) {\n        const siteHeaderHeight = siteHeader.offsetHeight + 'px';\n\n        document.documentElement.style.setProperty(\n            '--site-header-height',\n            siteHeaderHeight\n        );\n    }\n\n    const faultMessages = document.querySelector( '.fault-messages-js' );\n\n    if ( faultMessages ) {\n        const faultMessagesHeight = faultMessages.offsetHeight + 'px';\n\n        document.documentElement.style.setProperty(\n            '--fault-messages-height',\n            faultMessagesHeight\n        );\n    }\n}\n","/* global */\nimport PhotoSwipeLightbox from 'photoswipe/lightbox'; // eslint-disable-line\n\nconst photoSwipe = () => {\n    // Add needed data attributes to images.\n    const images = document.querySelectorAll( '.wp-block-gallery a' );\n    for ( const image of images ) {\n        // Get image height and width.\n        const img = image.querySelector( 'img' );\n        const imgHeight = img.getAttribute( 'height' );\n        const imgWidth = img.getAttribute( 'width' );\n\n        image.setAttribute( 'data-pswp-height', imgHeight );\n        image.setAttribute( 'data-pswp-width', imgWidth );\n    }\n\n    const lightbox = new PhotoSwipeLightbox( {\n        gallery: '.wp-block-gallery',\n        children: 'a',\n        pswpModule: () => import( 'photoswipe' ), // eslint-disable-line\n    } );\n\n    lightbox.init();\n};\n\nexport default photoSwipe;\n","/* global kalaData */\nimport { Navigation, animate } from '@meom/navigation';\n\nconst siteNav = () => {\n    // Mandatory elements.\n    const navItems = document.querySelector( '.js-site-nav-items' );\n    const navToggle = document.querySelector( '.js-site-nav-toggle' );\n\n    // Bail if there is no nav nor toggle button.\n    if ( ! navItems || ! navToggle ) {\n        return;\n    }\n\n    new Navigation( navItems, navToggle, {\n        subNavAnchors: '.js-site-nav-items .menu-item-has-children > a',\n        subSubNavAnchors:\n            '.js-site-nav-items .sub-menu > .menu-item-has-children > a',\n        subToggleButtonClasses: 'site-nav__sub-toggle',\n        subSubToggleButtonClasses: 'site-nav__sub-sub-toggle',\n        // Set this to false because we manually add classes for animation.\n        toggleNavClass: false,\n        // Translatable string for sub menu text.\n        // `kalaData` is located in `/includes/enqueue-assets.php`.\n        expandChildNavText: kalaData.expandChildNavText,\n        onOpenNav( element ) {\n            // Prevent scrolling on page.\n            document.documentElement.classList.add( 'is-overflow-hidden' );\n            document.documentElement.classList.add( 'is-nav-opened' );\n\n            element.classList.add( 'is-opened' );\n            animate( element, 'fade-in' );\n        },\n\n        onCloseNav( element ) {\n            // Allow scrolling on page.\n            document.documentElement.classList.remove( 'is-overflow-hidden' );\n            document.documentElement.classList.remove( 'is-nav-opened' );\n            animate( element, 'fade-out', 'is-opened' );\n        },\n    } );\n};\n\nexport default siteNav;\n","/*!\n  * PhotoSwipe Lightbox 5.4.3 - https://photoswipe.com\n  * (c) 2023 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\nfunction createElement(className, tagName, appendToEl) {\n  const el = document.createElement(tagName);\n\n  if (className) {\n    el.className = className;\n  }\n\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  }\n\n  return el;\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\n\nfunction toTransformString(x, y, scale) {\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n\n  if (scale !== undefined) {\n    propValue += ` scale3d(${scale},${scale},1)`;\n  }\n\n  return propValue;\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\n\nfunction setWidthHeight(el, w, h) {\n  el.style.width = typeof w === 'number' ? `${w}px` : w;\n  el.style.height = typeof h === 'number' ? `${h}px` : h;\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\n\nconst LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error'\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\n\nfunction specialKeyUsed(e) {\n  return 'button' in e && e.button === 1 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\n\nfunction getElementsFromOption(option, legacySelector, parent = document) {\n  /** @type {HTMLElement[]} */\n  let elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    const selector = typeof option === 'string' ? option : legacySelector;\n\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\n\nfunction isPswpClass(fn) {\n  return typeof fn === 'function' && fn.prototype && fn.prototype.goTo;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\n\nfunction isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n\n/** @typedef {import('../slide/slide.js').default} Slide */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\n\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\nclass PhotoSwipeEvent {\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\n  constructor(type, details) {\n    this.type = type;\n    this.defaultPrevented = false;\n\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\n\n\nclass Eventable {\n  constructor() {\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\n    this._listeners = {};\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\n\n    this._filters = {};\n    /** @type {PhotoSwipe | undefined} */\n\n    this.pswp = undefined;\n    /** @type {PhotoSwipeOptions | undefined} */\n\n    this.options = undefined;\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\n\n\n  addFilter(name, fn, priority = 100) {\n    var _this$_filters$name, _this$_filters$name2, _this$pswp;\n\n    if (!this._filters[name]) {\n      this._filters[name] = [];\n    }\n\n    (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.push({\n      fn,\n      priority\n    });\n    (_this$_filters$name2 = this._filters[name]) === null || _this$_filters$name2 === void 0 || _this$_filters$name2.sort((f1, f2) => f1.priority - f2.priority);\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.addFilter(name, fn, priority);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\n\n\n  removeFilter(name, fn) {\n    if (this._filters[name]) {\n      // @ts-expect-error\n      this._filters[name] = this._filters[name].filter(filter => filter.fn !== fn);\n    }\n\n    if (this.pswp) {\n      this.pswp.removeFilter(name, fn);\n    }\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\n\n\n  applyFilters(name, ...args) {\n    var _this$_filters$name3;\n\n    (_this$_filters$name3 = this._filters[name]) === null || _this$_filters$name3 === void 0 || _this$_filters$name3.forEach(filter => {\n      // @ts-expect-error\n      args[0] = filter.fn.apply(this, args);\n    });\n    return args[0];\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  on(name, fn) {\n    var _this$_listeners$name, _this$pswp2;\n\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.push(fn); // When binding events to lightbox,\n    // also bind events to PhotoSwipe Core,\n    // if it's open.\n\n    (_this$pswp2 = this.pswp) === null || _this$pswp2 === void 0 || _this$pswp2.on(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  off(name, fn) {\n    var _this$pswp3;\n\n    if (this._listeners[name]) {\n      // @ts-expect-error\n      this._listeners[name] = this._listeners[name].filter(listener => fn !== listener);\n    }\n\n    (_this$pswp3 = this.pswp) === null || _this$pswp3 === void 0 || _this$pswp3.off(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\n\n\n  dispatch(name, details) {\n    var _this$_listeners$name2;\n\n    if (this.pswp) {\n      return this.pswp.dispatch(name, details);\n    }\n\n    const event =\n    /** @type {AugmentedEvent<T>} */\n    new PhotoSwipeEvent(name, details);\n    (_this$_listeners$name2 = this._listeners[name]) === null || _this$_listeners$name2 === void 0 || _this$_listeners$name2.forEach(listener => {\n      listener.call(this, event);\n    });\n    return event;\n  }\n\n}\n\nclass Placeholder {\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\n  constructor(imageSrc, container) {\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\n    this.element = createElement('pswp__img pswp__img--placeholder', imageSrc ? 'img' : 'div', container);\n\n    if (imageSrc) {\n      const imgEl =\n      /** @type {HTMLImageElement} */\n      this.element;\n      imgEl.decoding = 'async';\n      imgEl.alt = '';\n      imgEl.src = imageSrc;\n      imgEl.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.element.tagName === 'IMG') {\n      // Use transform scale() to modify img placeholder size\n      // (instead of changing width/height directly).\n      // This helps with performance, specifically in iOS15 Safari.\n      setWidthHeight(this.element, 250, 'auto');\n      this.element.style.transformOrigin = '0 0';\n      this.element.style.transform = toTransformString(0, 0, width / 250);\n    } else {\n      setWidthHeight(this.element, width, height);\n    }\n  }\n\n  destroy() {\n    var _this$element;\n\n    if ((_this$element = this.element) !== null && _this$element !== void 0 && _this$element.parentNode) {\n      this.element.remove();\n    }\n\n    this.element = null;\n  }\n\n}\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\nclass Content {\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\n  constructor(itemData, instance, index) {\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\n\n    this.element = undefined;\n    /** @type {Placeholder | undefined} */\n\n    this.placeholder = undefined;\n    /** @type {Slide | undefined} */\n\n    this.slide = undefined;\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n    this.isAttached = false;\n    this.hasSlide = false;\n    this.isDecoding = false;\n    /** @type {LoadState} */\n\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', {\n      content: this\n    });\n  }\n\n  removePlaceholder() {\n    if (this.placeholder && !this.keepPlaceholder()) {\n      // With delay, as image might be loaded, but not rendered\n      setTimeout(() => {\n        if (this.placeholder) {\n          this.placeholder.destroy();\n          this.placeholder = undefined;\n        }\n      }, 1000);\n    }\n  }\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\n\n\n  load(isLazy, reload) {\n    if (this.slide && this.usePlaceholder()) {\n      if (!this.placeholder) {\n        const placeholderSrc = this.instance.applyFilters('placeholderSrc', // use  image-based placeholder only for the first slide,\n        // as rendering (even small stretched thumbnail) is an expensive operation\n        this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n        this.placeholder = new Placeholder(placeholderSrc, this.slide.container);\n      } else {\n        const placeholderEl = this.placeholder.element; // Add placeholder to DOM if it was already created\n\n        if (placeholderEl && !placeholderEl.parentElement) {\n          this.slide.container.prepend(placeholderEl);\n        }\n      }\n    }\n\n    if (this.element && !reload) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentLoad', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.isImageContent()) {\n      this.element = createElement('pswp__img', 'img'); // Start loading only after width is defined, as sizes might depend on it.\n      // Due to Safari feature, we must define sizes before srcset.\n\n      if (this.displayedImageWidth) {\n        this.loadImage(isLazy);\n      }\n    } else {\n      this.element = createElement('pswp__content', 'div');\n      this.element.innerHTML = this.data.html || '';\n    }\n\n    if (reload && this.slide) {\n      this.slide.updateContentSize(true);\n    }\n  }\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\n\n\n  loadImage(isLazy) {\n    var _this$data$src, _this$data$alt;\n\n    if (!this.isImageContent() || !this.element || this.instance.dispatch('contentLoadImage', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    const imageElement =\n    /** @type HTMLImageElement */\n    this.element;\n    this.updateSrcsetSizes();\n\n    if (this.data.srcset) {\n      imageElement.srcset = this.data.srcset;\n    }\n\n    imageElement.src = (_this$data$src = this.data.src) !== null && _this$data$src !== void 0 ? _this$data$src : '';\n    imageElement.alt = (_this$data$alt = this.data.alt) !== null && _this$data$alt !== void 0 ? _this$data$alt : '';\n    this.state = LOAD_STATE.LOADING;\n\n    if (imageElement.complete) {\n      this.onLoaded();\n    } else {\n      imageElement.onload = () => {\n        this.onLoaded();\n      };\n\n      imageElement.onerror = () => {\n        this.onError();\n      };\n    }\n  }\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\n\n\n  setSlide(slide) {\n    this.slide = slide;\n    this.hasSlide = true;\n    this.instance = slide.pswp; // todo: do we need to unset slide?\n  }\n  /**\r\n   * Content load success handler\r\n   */\n\n\n  onLoaded() {\n    this.state = LOAD_STATE.LOADED;\n\n    if (this.slide && this.element) {\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        content: this\n      }); // if content is reloaded\n\n      if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n        this.append();\n        this.slide.updateContentSize(true);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }\n  /**\r\n   * Content load error handler\r\n   */\n\n\n  onError() {\n    this.state = LOAD_STATE.ERROR;\n\n    if (this.slide) {\n      this.displayError();\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        isError: true,\n        content: this\n      });\n      this.instance.dispatch('loadError', {\n        slide: this.slide,\n        content: this\n      });\n    }\n  }\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\n\n\n  isLoading() {\n    return this.instance.applyFilters('isContentLoading', this.state === LOAD_STATE.LOADING, this);\n  }\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\n\n\n  isError() {\n    return this.state === LOAD_STATE.ERROR;\n  }\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\n\n\n  isImageContent() {\n    return this.type === 'image';\n  }\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.placeholder) {\n      this.placeholder.setDisplayedSize(width, height);\n    }\n\n    if (this.instance.dispatch('contentResize', {\n      content: this,\n      width,\n      height\n    }).defaultPrevented) {\n      return;\n    }\n\n    setWidthHeight(this.element, width, height);\n\n    if (this.isImageContent() && !this.isError()) {\n      const isInitialSizeUpdate = !this.displayedImageWidth && width;\n      this.displayedImageWidth = width;\n      this.displayedImageHeight = height;\n\n      if (isInitialSizeUpdate) {\n        this.loadImage(false);\n      } else {\n        this.updateSrcsetSizes();\n      }\n\n      if (this.slide) {\n        this.instance.dispatch('imageSizeChange', {\n          slide: this.slide,\n          width,\n          height,\n          content: this\n        });\n      }\n    }\n  }\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\n\n\n  isZoomable() {\n    return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== LOAD_STATE.ERROR, this);\n  }\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\n\n\n  updateSrcsetSizes() {\n    // Handle srcset sizes attribute.\n    //\n    // Never lower quality, if it was increased previously.\n    // Chrome does this automatically, Firefox and Safari do not,\n    // so we store largest used size in dataset.\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\n      return;\n    }\n\n    const image =\n    /** @type HTMLImageElement */\n    this.element;\n    const sizesWidth = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);\n\n    if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n      image.sizes = sizesWidth + 'px';\n      image.dataset.largestUsedSize = String(sizesWidth);\n    }\n  }\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\n\n\n  usePlaceholder() {\n    return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);\n  }\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\n\n\n  lazyLoad() {\n    if (this.instance.dispatch('contentLazyLoad', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.load(true);\n  }\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\n\n\n  keepPlaceholder() {\n    return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);\n  }\n  /**\r\n   * Destroy the content\r\n   */\n\n\n  destroy() {\n    this.hasSlide = false;\n    this.slide = undefined;\n\n    if (this.instance.dispatch('contentDestroy', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.remove();\n\n    if (this.placeholder) {\n      this.placeholder.destroy();\n      this.placeholder = undefined;\n    }\n\n    if (this.isImageContent() && this.element) {\n      this.element.onload = null;\n      this.element.onerror = null;\n      this.element = undefined;\n    }\n  }\n  /**\r\n   * Display error message\r\n   */\n\n\n  displayError() {\n    if (this.slide) {\n      var _this$instance$option, _this$instance$option2;\n\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\n      errorMsgEl.innerText = (_this$instance$option = (_this$instance$option2 = this.instance.options) === null || _this$instance$option2 === void 0 ? void 0 : _this$instance$option2.errorMsg) !== null && _this$instance$option !== void 0 ? _this$instance$option : '';\n      errorMsgEl =\n      /** @type {HTMLDivElement} */\n      this.instance.applyFilters('contentErrorElement', errorMsgEl, this);\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\n      this.element.appendChild(errorMsgEl);\n      this.slide.container.innerText = '';\n      this.slide.container.appendChild(this.element);\n      this.slide.updateContentSize(true);\n      this.removePlaceholder();\n    }\n  }\n  /**\r\n   * Append the content\r\n   */\n\n\n  append() {\n    if (this.isAttached || !this.element) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.state === LOAD_STATE.ERROR) {\n      this.displayError();\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppend', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    const supportsDecode = ('decode' in this.element);\n\n    if (this.isImageContent()) {\n      // Use decode() on nearby slides\n      //\n      // Nearby slide images are in DOM and not hidden via display:none.\n      // However, they are placed offscreen (to the left and right side).\n      //\n      // Some browsers do not composite the image until it's actually visible,\n      // using decode() helps.\n      //\n      // You might ask \"why dont you just decode() and then append all images\",\n      // that's because I want to show image before it's fully loaded,\n      // as browser can render parts of image while it is loading.\n      // We do not do this in Safari due to partial loading bug.\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n        this.isDecoding = true; // purposefully using finally instead of then,\n        // as if srcset sizes changes dynamically - it may cause decode error\n\n        /** @type {HTMLImageElement} */\n\n        this.element.decode().catch(() => {}).finally(() => {\n          this.isDecoding = false;\n          this.appendImage();\n        });\n      } else {\n        this.appendImage();\n      }\n    } else if (this.slide && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n  }\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\n\n\n  activate() {\n    if (this.instance.dispatch('contentActivate', {\n      content: this\n    }).defaultPrevented || !this.slide) {\n      return;\n    }\n\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\n      // add image to slide when it becomes active,\n      // even if it's not finished decoding\n      this.appendImage();\n    } else if (this.isError()) {\n      this.load(false, true); // try to reload\n    }\n\n    if (this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\n    }\n  }\n  /**\r\n   * Deactivate the content\r\n   */\n\n\n  deactivate() {\n    this.instance.dispatch('contentDeactivate', {\n      content: this\n    });\n\n    if (this.slide && this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\r\n   * Remove the content from DOM\r\n   */\n\n\n  remove() {\n    this.isAttached = false;\n\n    if (this.instance.dispatch('contentRemove', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.remove();\n    }\n\n    if (this.placeholder && this.placeholder.element) {\n      this.placeholder.element.remove();\n    }\n  }\n  /**\r\n   * Append the image content to slide container\r\n   */\n\n\n  appendImage() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppendImage', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    } // ensure that element exists and is not already appended\n\n\n    if (this.slide && this.element && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n      this.removePlaceholder();\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\nfunction getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\n\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\n\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  let paddingValue = 0;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1); // @ts-expect-error\n\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return Number(paddingValue) || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\n\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x - parsePaddingOption('left', options, viewportSize, itemData, index) - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y - parsePaddingOption('top', options, viewportSize, itemData, index) - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\n\nclass ZoomLevel {\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\n  constructor(options, itemData, index, pswp) {\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n    /** @type { Point | null } */\n\n    this.panAreaSize = null;\n    /** @type { Point | null } */\n\n    this.elementSize = null;\n    this.fit = 1;\n    this.fill = 1;\n    this.vFill = 1;\n    this.initial = 1;\n    this.secondary = 1;\n    this.max = 1;\n    this.min = 1;\n  }\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\n\n\n  update(maxWidth, maxHeight, panAreaSize) {\n    /** @type {Point} */\n    const elementSize = {\n      x: maxWidth,\n      y: maxHeight\n    };\n    this.elementSize = elementSize;\n    this.panAreaSize = panAreaSize;\n    const hRatio = panAreaSize.x / elementSize.x;\n    const vRatio = panAreaSize.y / elementSize.y;\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio); // zoom.vFill defines zoom level of the image\n    // when it has 100% of viewport vertical space (height)\n\n    this.vFill = Math.min(1, vRatio);\n    this.initial = this._getInitial();\n    this.secondary = this._getSecondary();\n    this.max = Math.max(this.initial, this.secondary, this._getMax());\n    this.min = Math.min(this.fit, this.initial, this.secondary);\n\n    if (this.pswp) {\n      this.pswp.dispatch('zoomLevelsUpdate', {\n        zoomLevels: this,\n        slideData: this.itemData\n      });\n    }\n  }\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\n\n\n  _parseZoomLevelOption(optionPrefix) {\n    const optionName =\n    /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */\n    optionPrefix + 'ZoomLevel';\n    const optionValue = this.options[optionName];\n\n    if (!optionValue) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      return optionValue(this);\n    }\n\n    if (optionValue === 'fill') {\n      return this.fill;\n    }\n\n    if (optionValue === 'fit') {\n      return this.fit;\n    }\n\n    return Number(optionValue);\n  }\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getSecondary() {\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\n\n    if (currZoomLevel) {\n      return currZoomLevel;\n    } // 3x of \"fit\" state, but not larger than original\n\n\n    currZoomLevel = Math.min(1, this.fit * 3);\n\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n    }\n\n    return currZoomLevel;\n  }\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getInitial() {\n    return this._parseZoomLevelOption('initial') || this.fit;\n  }\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getMax() {\n    // max zoom level is x4 from \"fit state\",\n    // used for zoom gesture and ctrl/trackpad zoom\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\n  }\n\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\n\nfunction lazyLoadData(itemData, instance, index) {\n  const content = instance.createContentFromData(itemData, index);\n  /** @type {ZoomLevel | undefined} */\n\n  let zoomLevel;\n  const {\n    options\n  } = instance; // We need to know dimensions of the image to preload it,\n  // as it might use srcset, and we need to define sizes\n\n  if (options) {\n    zoomLevel = new ZoomLevel(options, itemData, -1);\n    let viewportSize;\n\n    if (instance.pswp) {\n      viewportSize = instance.pswp.viewportSize;\n    } else {\n      viewportSize = getViewportSize(options, instance);\n    }\n\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n    zoomLevel.update(content.width, content.height, panAreaSize);\n  }\n\n  content.lazyLoad();\n\n  if (zoomLevel) {\n    content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n  }\n\n  return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\n\nfunction lazyLoadSlide(index, instance) {\n  const itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', {\n    index,\n    itemData\n  }).defaultPrevented) {\n    return;\n  }\n\n  return lazyLoadData(itemData, instance, index);\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\n\nclass PhotoSwipeBase extends Eventable {\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\n  getNumItems() {\n    var _this$options;\n\n    let numItems = 0;\n    const dataSource = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.dataSource;\n\n    if (dataSource && 'length' in dataSource) {\n      // may be an array or just object with length property\n      numItems = dataSource.length;\n    } else if (dataSource && 'gallery' in dataSource) {\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      if (dataSource.items) {\n        numItems = dataSource.items.length;\n      }\n    } // legacy event, before filters were introduced\n\n\n    const event = this.dispatch('numItems', {\n      dataSource,\n      numItems\n    });\n    return this.applyFilters('numItems', event.numItems, dataSource);\n  }\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\n\n\n  createContentFromData(slideData, index) {\n    return new Content(slideData, this, index);\n  }\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\n\n\n  getItemData(index) {\n    var _this$options2;\n\n    const dataSource = (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.dataSource;\n    /** @type {SlideData | HTMLElement} */\n\n    let dataSourceItem = {};\n\n    if (Array.isArray(dataSource)) {\n      // Datasource is an array of elements\n      dataSourceItem = dataSource[index];\n    } else if (dataSource && 'gallery' in dataSource) {\n      // dataSource has gallery property,\n      // thus it was created by Lightbox, based on\n      // gallery and children options\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      dataSourceItem = dataSource.items[index];\n    }\n\n    let itemData = dataSourceItem;\n\n    if (itemData instanceof Element) {\n      itemData = this._domElementToItemData(itemData);\n    } // Dispatching the itemData event,\n    // it's a legacy verion before filters were introduced\n\n\n    const event = this.dispatch('itemData', {\n      itemData: itemData || {},\n      index\n    });\n    return this.applyFilters('itemData', event.itemData, index);\n  }\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\n\n\n  _getGalleryDOMElements(galleryElement) {\n    var _this$options3, _this$options4;\n\n    if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.children || (_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.childSelector) {\n      return getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n    }\n\n    return [galleryElement];\n  }\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\n\n\n  _domElementToItemData(element) {\n    /** @type {SlideData} */\n    const itemData = {\n      element\n    };\n    const linkEl =\n    /** @type {HTMLAnchorElement} */\n    element.tagName === 'A' ? element : element.querySelector('a');\n\n    if (linkEl) {\n      // src comes from data-pswp-src attribute,\n      // if it's empty link href is used\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n      if (linkEl.dataset.pswpSrcset) {\n        itemData.srcset = linkEl.dataset.pswpSrcset;\n      }\n\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0; // support legacy w & h properties\n\n      itemData.w = itemData.width;\n      itemData.h = itemData.height;\n\n      if (linkEl.dataset.pswpType) {\n        itemData.type = linkEl.dataset.pswpType;\n      }\n\n      const thumbnailEl = element.querySelector('img');\n\n      if (thumbnailEl) {\n        var _thumbnailEl$getAttri;\n\n        // msrc is URL to placeholder image that's displayed before large image is loaded\n        // by default it's displayed only for the first slide\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n        itemData.alt = (_thumbnailEl$getAttri = thumbnailEl.getAttribute('alt')) !== null && _thumbnailEl$getAttri !== void 0 ? _thumbnailEl$getAttri : '';\n      }\n\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n        itemData.thumbCropped = true;\n      }\n    }\n\n    return this.applyFilters('domItemData', itemData, element, linkEl);\n  }\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\n\n\n  lazyLoadData(itemData, index) {\n    return lazyLoadData(itemData, this, index);\n  }\n\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/content.js').default} Content */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\n\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\n\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\n  constructor(options) {\n    super();\n    /** @type {PhotoSwipeOptions} */\n\n    this.options = options || {};\n    this._uid = 0;\n    this.shouldOpen = false;\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\n\n    this._preloadedContent = undefined;\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\n  }\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\n\n\n  init() {\n    // Bind click events to each gallery\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.addEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n  /**\r\n   * @param {MouseEvent} e\r\n   */\n\n\n  onThumbnailsClick(e) {\n    // Exit and allow default browser action if:\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\n    || window.pswp) {\n      // ... if PhotoSwipe is already open\n      return;\n    } // If both clientX and clientY are 0 or not defined,\n    // the event is likely triggered by keyboard,\n    // so we do not pass the initialPoint\n    //\n    // Note that some screen readers emulate the mouse position,\n    // so it's not the ideal way to detect them.\n    //\n\n    /** @type {Point | null} */\n\n\n    let initialPoint = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (!initialPoint.x && !initialPoint.y) {\n      initialPoint = null;\n    }\n\n    let clickedIndex = this.getClickedIndex(e);\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\n    /** @type {DataSource} */\n\n    const dataSource = {\n      gallery:\n      /** @type {HTMLElement} */\n      e.currentTarget\n    };\n\n    if (clickedIndex >= 0) {\n      e.preventDefault();\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\n    }\n  }\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\n\n\n  getClickedIndex(e) {\n    // legacy option\n    if (this.options.getClickedIndexFn) {\n      return this.options.getClickedIndexFn.call(this, e);\n    }\n\n    const clickedTarget =\n    /** @type {HTMLElement} */\n    e.target;\n    const childElements = getElementsFromOption(this.options.children, this.options.childSelector,\n    /** @type {HTMLElement} */\n    e.currentTarget);\n    const clickedChildIndex = childElements.findIndex(child => child === clickedTarget || child.contains(clickedTarget));\n\n    if (clickedChildIndex !== -1) {\n      return clickedChildIndex;\n    } else if (this.options.children || this.options.childSelector) {\n      // click wasn't on a child element\n      return -1;\n    } // There is only one item (which is the gallery)\n\n\n    return 0;\n  }\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\n\n\n  loadAndOpen(index, dataSource, initialPoint) {\n    // Check if the gallery is already open\n    if (window.pswp || !this.options) {\n      return false;\n    } // Use the first gallery element if dataSource is not provided\n\n\n    if (!dataSource && this.options.gallery && this.options.children) {\n      const galleryElements = getElementsFromOption(this.options.gallery);\n\n      if (galleryElements[0]) {\n        dataSource = {\n          gallery: galleryElements[0]\n        };\n      }\n    } // set initial index\n\n\n    this.options.index = index; // define options for PhotoSwipe constructor\n\n    this.options.initialPointerPos = initialPoint;\n    this.shouldOpen = true;\n    this.preload(index, dataSource);\n    return true;\n  }\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\n\n\n  preload(index, dataSource) {\n    const {\n      options\n    } = this;\n\n    if (dataSource) {\n      options.dataSource = dataSource;\n    } // Add the main module\n\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\n\n\n    const promiseArray = [];\n    const pswpModuleType = typeof options.pswpModule;\n\n    if (isPswpClass(options.pswpModule)) {\n      promiseArray.push(Promise.resolve(\n      /** @type {Type<PhotoSwipe>} */\n      options.pswpModule));\n    } else if (pswpModuleType === 'string') {\n      throw new Error('pswpModule as string is no longer supported');\n    } else if (pswpModuleType === 'function') {\n      promiseArray.push(\n      /** @type {() => Promise<Type<PhotoSwipe>>} */\n      options.pswpModule());\n    } else {\n      throw new Error('pswpModule is not valid');\n    } // Add custom-defined promise, if any\n\n\n    if (typeof options.openPromise === 'function') {\n      // allow developers to perform some task before opening\n      promiseArray.push(options.openPromise());\n    }\n\n    if (options.preloadFirstSlide !== false && index >= 0) {\n      this._preloadedContent = lazyLoadSlide(index, this);\n    } // Wait till all promises resolve and open PhotoSwipe\n\n\n    const uid = ++this._uid;\n    Promise.all(promiseArray).then(iterableModules => {\n      if (this.shouldOpen) {\n        const mainModule = iterableModules[0];\n\n        this._openPhotoswipe(mainModule, uid);\n      }\n    });\n  }\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\n\n\n  _openPhotoswipe(module, uid) {\n    // Cancel opening if UID doesn't match the current one\n    // (if user clicked on another gallery item before current was loaded).\n    //\n    // Or if shouldOpen flag is set to false\n    // (developer may modify it via public API)\n    if (uid !== this._uid && this.shouldOpen) {\n      return;\n    }\n\n    this.shouldOpen = false; // PhotoSwipe is already open\n\n    if (window.pswp) {\n      return;\n    }\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\n\n\n    const pswp = typeof module === 'object' ? new module.default(this.options) // eslint-disable-line\n    : new module(this.options); // eslint-disable-line\n\n    this.pswp = pswp;\n    window.pswp = pswp; // map listeners from Lightbox to PhotoSwipe Core\n\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\n\n    Object.keys(this._listeners).forEach(name => {\n      var _this$_listeners$name;\n\n      (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.forEach(fn => {\n        pswp.on(name,\n        /** @type {EventCallback<typeof name>} */\n        fn);\n      });\n    }); // same with filters\n\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\n\n    Object.keys(this._filters).forEach(name => {\n      var _this$_filters$name;\n\n      (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.forEach(filter => {\n        pswp.addFilter(name, filter.fn, filter.priority);\n      });\n    });\n\n    if (this._preloadedContent) {\n      pswp.contentLoader.addToCache(this._preloadedContent);\n      this._preloadedContent = undefined;\n    }\n\n    pswp.on('destroy', () => {\n      // clean up public variables\n      this.pswp = undefined;\n      delete window.pswp;\n    });\n    pswp.init();\n  }\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\n\n\n  destroy() {\n    var _this$pswp;\n\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.destroy();\n    this.shouldOpen = false;\n    this._listeners = {};\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"horisonttigroup:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"js/main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkhorisonttigroup\"] = globalThis[\"webpackChunkhorisonttigroup\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* global */\nimport animateInView from './components/animate-in-view';\nimport componentHeights from './components/component-heights';\nimport photoSwipe from './components/photoswipe';\nimport siteNav from './components/site-nav';\n\nanimateInView();\ncomponentHeights();\nphotoSwipe();\nsiteNav();\n"],"names":["animateInView","siteAnimations","document","querySelectorAll","forEach","siteAnimation","dataset","animated","animations","prevYPosition","direction","fireAnimation","target","classList","add","shouldUpdate","entry","isIntersecting","onIntersect","entries","window","scrollY","options","rootMargin","threshold","observer","IntersectionObserver","animation","observe","componentHeights","siteHeader","querySelector","siteHeaderHeight","offsetHeight","documentElement","style","setProperty","faultMessages","faultMessagesHeight","PhotoSwipeLightbox","photoSwipe","images","image","img","imgHeight","getAttribute","imgWidth","setAttribute","lightbox","gallery","children","pswpModule","init","Navigation","animate","siteNav","navItems","navToggle","subNavAnchors","subSubNavAnchors","subToggleButtonClasses","subSubToggleButtonClasses","toggleNavClass","expandChildNavText","kalaData","onOpenNav","element","onCloseNav","remove"],"sourceRoot":""}